services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend

  backend:
    build:
      context: ./backend
    image: python:3.12
    ports:
      - "8002:8002"
    env_file:
      - .env
    volumes:
      - ./backend:/app
    command: sh -c "./entrypoint.sh"
    depends_on:
      - db
    networks:
      - backend

  daphne:
    build:
      context: ./backend
    ports:
      - "8003:8003"
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis
    command: sh -c "daphne -p 8003 -b 0.0.0.0 shop_service.asgi:application"
    networks:
      - backend

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - backend

  celery:
    build:
      context: ./backend
    command:
      celery -A shop_service worker -l INFO
    depends_on:
      - backend
      - redis
    env_file:
      - .env
    networks:
      - backend

#  frontend:
#    build:
#      context: ./frontend
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./frontend:/app
#      - /app/node_modules
#    depends_on:
#      - backend
#    networks:
#      - backend

volumes:
  db_data:

networks:
  backend:
    driver: bridge